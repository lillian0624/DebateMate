"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/results/page",{

/***/ "(app-pages-browser)/./src/contexts/UserContext.tsx":
/*!**************************************!*\
  !*** ./src/contexts/UserContext.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserProvider: () => (/* binding */ UserProvider),\n/* harmony export */   useUser: () => (/* binding */ useUser)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ UserProvider,useUser auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst UserContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction UserProvider(param) {\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [debateHistory, setDebateHistory] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isAuthenticated, setIsAuthenticated] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Load user data from localStorage on mount and hydrate history from server if available\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"UserProvider.useEffect\": ()=>{\n            const savedUser = localStorage.getItem('debatemate_user');\n            const savedHistory = localStorage.getItem('debatemate_history');\n            if (savedUser) {\n                try {\n                    const userData = JSON.parse(savedUser);\n                    setUser(userData);\n                    setIsAuthenticated(true);\n                } catch (error) {\n                    console.error('Error parsing user data:', error);\n                    localStorage.removeItem('debatemate_user');\n                }\n            }\n            if (savedHistory) {\n                try {\n                    const historyData = JSON.parse(savedHistory);\n                    setDebateHistory(historyData);\n                } catch (error) {\n                    console.error('Error parsing history data:', error);\n                    localStorage.removeItem('debatemate_history');\n                }\n            }\n            // Also attempt to fetch server-backed history for this user if we have one\n            ;\n            ({\n                \"UserProvider.useEffect\": async ()=>{\n                    try {\n                        const currentUser = savedUser ? JSON.parse(savedUser) : null;\n                        if (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) {\n                            const res = await fetch(\"/api/debates?userId=\".concat(encodeURIComponent(currentUser.id)));\n                            if (res.ok) {\n                                const data = await res.json();\n                                if (Array.isArray(data.debates)) {\n                                    setDebateHistory(data.debates);\n                                }\n                            }\n                        }\n                    } catch (e) {\n                    // Non-fatal: keep local copy\n                    }\n                }\n            })[\"UserProvider.useEffect\"]();\n        }\n    }[\"UserProvider.useEffect\"], []);\n    // Save user data to localStorage whenever it changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"UserProvider.useEffect\": ()=>{\n            if (user) {\n                localStorage.setItem('debatemate_user', JSON.stringify(user));\n            } else {\n                localStorage.removeItem('debatemate_user');\n            }\n        }\n    }[\"UserProvider.useEffect\"], [\n        user\n    ]);\n    // Save debate history to localStorage whenever it changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"UserProvider.useEffect\": ()=>{\n            localStorage.setItem('debatemate_history', JSON.stringify(debateHistory));\n        }\n    }[\"UserProvider.useEffect\"], [\n        debateHistory\n    ]);\n    const login = (username, email)=>{\n        const newUser = {\n            id: Date.now().toString(),\n            username,\n            email,\n            createdAt: new Date().toISOString(),\n            totalDebates: 0,\n            averageScore: 0\n        };\n        setUser(newUser);\n        setIsAuthenticated(true);\n    };\n    const ensureUser = ()=>{\n        if (!user) {\n            const guestName = \"Guest_\".concat(Math.floor(Math.random() * 10000));\n            login(guestName, \"\".concat(guestName.toLowerCase(), \"@local\"));\n        }\n    };\n    const logout = ()=>{\n        setUser(null);\n        setIsAuthenticated(false);\n        setDebateHistory([]);\n        localStorage.removeItem('debatemate_user');\n        localStorage.removeItem('debatemate_history');\n    };\n    const saveDebate = async (debate)=>{\n        const newDebate = {\n            ...debate,\n            id: Date.now().toString(),\n            createdAt: new Date().toISOString()\n        };\n        setDebateHistory((prev)=>{\n            const updated = [\n                newDebate,\n                ...prev\n            ];\n            if (user) {\n                const totalDebates = updated.length;\n                const totalScore = updated.reduce((sum, d)=>{\n                    const overall = (d.finalMetrics.persuasiveness + d.finalMetrics.clarity + d.finalMetrics.logic) / 3;\n                    return sum + overall;\n                }, 0);\n                const averageScore = totalDebates > 0 ? Math.round(totalScore / totalDebates * 10) / 10 : 0;\n                setUser((prevUser)=>prevUser ? {\n                        ...prevUser,\n                        totalDebates,\n                        averageScore\n                    } : prevUser);\n            }\n            return updated;\n        });\n        // Persist to server (filesystem JSON) for durability per user\n        try {\n            const uid = user === null || user === void 0 ? void 0 : user.id;\n            if (uid) {\n                await fetch('/api/debates', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        userId: uid,\n                        debate: newDebate\n                    })\n                });\n            }\n        } catch (e) {\n            console.error('Failed to persist debate to server:', e);\n        }\n    };\n    const deleteDebate = (debateId)=>{\n        setDebateHistory((prev)=>prev.filter((debate)=>debate.id !== debateId));\n        updateUserStats();\n    };\n    const updateUserStats = ()=>{\n        if (!user) return;\n        const totalDebates = debateHistory.length;\n        const totalScore = debateHistory.reduce((sum, debate)=>{\n            const overallScore = (debate.finalMetrics.persuasiveness + debate.finalMetrics.clarity + debate.finalMetrics.logic) / 3;\n            return sum + overallScore;\n        }, 0);\n        const averageScore = totalDebates > 0 ? totalScore / totalDebates : 0;\n        setUser((prev)=>prev ? {\n                ...prev,\n                totalDebates,\n                averageScore: Math.round(averageScore * 10) / 10\n            } : null);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(UserContext.Provider, {\n        value: {\n            user,\n            isAuthenticated,\n            debateHistory,\n            login,\n            ensureUser,\n            logout,\n            saveDebate,\n            deleteDebate,\n            updateUserStats\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/yangli/learning/debatemate/global-accelerator-2025/0002_debatemate/src/contexts/UserContext.tsx\",\n        lineNumber: 202,\n        columnNumber: 9\n    }, this);\n}\n_s(UserProvider, \"3DXapCcWp+6b9Hf4G1+SD47wuGU=\");\n_c = UserProvider;\nfunction useUser() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(UserContext);\n    if (context === undefined) {\n        throw new Error('useUser must be used within a UserProvider');\n    }\n    return context;\n}\n_s1(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/contexts/UserContext.tsx\n"));

/***/ })

});